@using Todo.Data
@using Todo.Views.TodoItem
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

@inject ApplicationDbContext dbContext

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <div>
        @Html.HiddenFor(m => m.TodoListId)
        @Html.Label("order-by-dropdown", "Order by: ")
        @Html.DropDownList(
            "order-by-dropdown",
            new List<SelectListItem>
            {
                new SelectListItem { Text = "Importance", Value = "Importance", Selected = !Model.OrderByRank },
                new SelectListItem { Text = "Rank", Value = "Rank", Selected = Model.OrderByRank }
            })
    </div>

    @Html.Label("hide-completed-items-checkbox", " Hide completed items")
    @Html.CheckBox("hide-completed-items-checkbox")

    <ul id="todo-list" class="list-group">

        <li class="list-group-item">
            <a asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId">
                <strong>Add New Item</strong>
            </a>
        </li>

        @foreach (var item in Model.Items)
        {
            // Using Html.RenderPartialAsync() rather than Html.PartialAsync() here because it's more performant
            await Html.RenderPartialAsync("_TodoItemPartial.cshtml", item);
        }

    </ul>
</div>

<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>
    var orderByRank = "@Model.OrderByRank".toLowerCase() === "true";
    if (orderByRank) {
        $("#todo-list").sortable({
            update: function () {
                var rank = 1;
                var newItemRanks = [];
                $('[id^="item-id"]').each(function () {
                    newItemRanks.push({ id: $(this).val(), rank });
                    rank++;
                });

                $.ajax({
                    url: '/TodoList/@Model.TodoListId',
                    method: 'POST',
                    dataType: 'json',
                    contentType: 'application/json',
                    data: JSON.stringify({ newItemRanks })
                })
            }
        });
    }
</script>
